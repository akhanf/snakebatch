bids_dir: '/scratch/akhanf/3_processing/preproc-smk-new/bids_test'
output_dir: 'results'

#enable printing debug statements during parsing -- disable if generating dag visualization
debug: False

derivatives: False #will search in bids/derivatives if True; can also be path(s) to derivatives datasets

#list of analysis levels in the bids app
analysis_levels: &analysis_levels
 - participant


#mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - ''  # if '', then the first rule is run

#this configures the pybids grabber - create an entry for each type of input you want to grab
# indexed by name of input
#   dictionary for each input is passed directly to pybids get()
#    https://bids-standard.github.io/pybids/generated/bids.layout.BIDSLayout.html#bids.layout.BIDSLayout.get

pybids_inputs:
  dwi:
    filters:
      suffix: 'dwi'
      extension: '.nii.gz'
      datatype: 'dwi'
    wildcards:
      - subject
      - session
      - acquisition
      - run
      - direction
  t1:
    filters:
      suffix: 'T1w'
      extension: '.nii.gz'
      datatype: 'anat'
    wildcards:
      - subject
      - session
      - acquisition
      - run


#this configures the options to save the BIDSLayout
# by default, database is not saved (uncomment to save)
# NOTE: pybids_db_dir must be an absolute path
# pybids_db_dir: '/path/to/db_dir' # Leave blank if you do not wish to use this
# pybids_db_reset: False # Change this to true to update the database

#configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:

#---  core BIDS-app options --- (do not modify below)

  bids_dir:
    help: The directory with the input dataset formatted according
          to the BIDS standard.

  output_dir:
    help: The directory where the output files
          should be stored. If you are running group level analysis
          this folder should be prepopulated with the results of the
          participant level analysis.

  analysis_level:
    help: Level of the analysis that will be performed.
    choices: *analysis_levels

  --participant_label:
    help: The label(s) of the participant(s) that should be analyzed. The label
          corresponds to sub-<participant_label> from the BIDS spec
          (so it does not include "sub-"). If this parameter is not
          provided all subjects should be analyzed. Multiple
          participants can be specified with a space separated list.
    nargs: '+'

  --exclude_participant_label:
    help: The label(s) of the participant(s) that should be excluded. The label
          corresponds to sub-<participant_label> from the BIDS spec
          (so it does not include "sub-"). If this parameter is not
          provided all subjects should be analyzed. Multiple
          participants can be specified with a space separated list.
    nargs: '+'

  --derivatives:
    help: 'Path(s) to a derivatives dataset, for folder(s) that contains multiple derivatives datasets (default: %(default)s) '
    default: False
    nargs: '+'


singularity_prefix: '/project/6050199/akhanf/singularity/snakemake_containers'

# app options below:

sb_apps:
  snakedwi:
    snakebids: True
    url: 'http://github.com/akhanf/snakedwi'
    tag: 'v0.2.0-alpha'
    runscript: 'snakedwi/run.py' #relative to the app repo
    opts: ''
    root_folders:
      - 'snakedwi'
      - 'work'
    input_to_filter: dwi #e.g. for --filter-dwi
    resources:
      cores: 8
      mem_mb: 32000
      time: 360 
      tmpdir: '$SLURM_TMPDIR'
      gpus: 0


  snakeanat:
    snakebids: True
    url: 'http://github.com/pvandyken/snakeanat'
    tag: 'main'
    runscript: 'snakeanat/run.py' #relative to the app repo
    opts: ''
    root_folders:
      - ''
      - 'qc'
      - 'sourcedata/fastsurfer'
      - 'sourcedata/ciftify'
    input_to_filter: t1 #e.g. for --filter-dwi
    resources:
      cores: 8
      mem_mb: 32000
      time: 360 
      tmpdir: '$SLURM_TMPDIR'
      gpus: 0


  hippunfold:
    snakebids: True
    container: '/project/6050199/akhanf/singularity/bids-apps/khanlab_hippunfold_v1.3.3.sif'
    opts: ''
    root_folders:
      - 'hippunfold'
      - 'work'
    input_to_filter: t1 #e.g. for --filter-dwi
    resources:
      cores: 8
      mem_mb: 32000
      time: 360 
      tmpdir: '$SLURM_TMPDIR'
      gpus: 0


  fmriprep:
    container: '/project/6050199/akhanf/singularity/bids-apps/nipreps_fmriprep_23.1.0.sif'
    opts: ''
    root_folders:
      - ''
    input_to_filter: t1 #e.g. for --filter-dwi
    resources:
      cores: 8
      mem_mb: 32000
      time: 360 
      tmpdir: '$SLURM_TMPDIR'
      gpus: 0


